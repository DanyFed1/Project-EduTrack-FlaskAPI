sql to create db:
CREATE DATABASE fxmnd_task_10;
CREATE USER master_user WITH PASSWORD 'test_password_for_master_user';
GRANT ALL PRIVILEGES ON DATABASE fxmnd_task_10 TO master_user;
GRANT USAGE ON SCHEMA public TO master_user;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO master_user;
GRANT CREATE ON SCHEMA public TO master_user;
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO master_user;

#Enabling all privivliges on Database is not enough, also need enable priviliges on public schema


#checking whether cration of tables was done successfully:
 psql -U master_user -d fxmnd_task_10

\dt


#Sending POST/DELETE methods though Insomnia
Using Insomnia to test your Flask API endpoints involves sending requests to the server and observing the responses. Insomnia is a powerful HTTP client that makes it easy to send requests with various HTTP methods, set headers, and include request bodies. Here's how to use Insomnia to test the different types of requests you mentioned:

Step 1: Install Insomnia
If you haven't already, download and install Insomnia from its official website.

Step 2: Create a New Request
Open Insomnia and start by creating a new request or request group (collection of requests).
Click the "+" icon or "New Request" button to create a new request.
Name your request appropriately based on the action it performs, like "Add Student", "Delete Student", etc.
Select the method (GET, POST, DELETE) from the dropdown next to the request name field based on what you are testing.
Enter the URL for the request. This will be your localhost address followed by the endpoint path, for example, http://127.0.0.1:5000/student/add for adding a student.
Step 3: Configure Your Request
Depending on the HTTP method, you'll need to configure your request differently:

For POST Requests (e.g., Add Student or Assign Student to Course)
Set the Content-Type header: In the Headers tab, add a new header with Content-Type as the key and application/json as the value.
Include JSON data: In the Body tab, select JSON and enter your request body. For example, to add a new student:
json
Copy code
{
  "first_name": "Jane",
  "last_name": "Doe",
  "group_id": 1
}
For DELETE Requests (e.g., Delete Student or Remove Student from Course)
You typically don't need to include a body for DELETE requests. Just ensure the URL is correctly formatted with the necessary ID(s), like http://127.0.0.1:5000/student/delete/1.
Step 4: Send the Request
Click the "Send" button to issue your request to the server.
View the response: Insomnia will display the server's response in the lower section of the window. This includes the status code, response time, and body.
Repeat for Other Endpoints
Create new requests for each of the endpoints you wish to test, following the steps above to configure each request according to its requirements.
Additional Tips
Organize your requests into collections if you are working with many different endpoints. This helps keep your workspace tidy and makes it easier to switch between testing different parts of your API.
Use Environment Variables: Insomnia allows you to define environment variables for things like base URLs, making it easy to switch between different environments (e.g., development, staging, production) without changing each request manually.
By following these steps, you can thoroughly test your Flask API's POST and DELETE endpoints, as well as any other endpoints, using Insomnia.